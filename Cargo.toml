[package]
name = "url-cleaner"
version = "0.1.0"
edition = "2021"
description = "A CLI tool and library for URL manipulation with a focus on stripping tracking garbage."
repository = "https://github.com/Scripter17/url-cleaner"
keywords = ["url", "tracking", "paramaters", "telemetry", "consent"] # "telemetry" is specified because the freaks that use telemetry need to know people don't want or consent to it.
categories = ["command-line-utilities"]
license = "AGPL-3.0-or-later"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
clap = { version = "4.5.4", features = ["derive"] }
serde = { version = "1.0.198", features = ["derive"] }
serde_json = "1.0.116"
url = { version = "2.5.0", features = ["serde"] }
reqwest = { version = "0.12.4", features = ["blocking", "socks"], optional = true }
const-str = { version = "0.5.7", optional = true }
atty = { version = "0.2.14", optional = true }
thiserror = "1.0.59"
regex = { version = "1.10.4", optional = true }
glob = { version = "0.3.1", optional = true }
psl = "2.1.34"
form_urlencoded = "1.2.1"
regex-syntax = { version = "0.8.3", optional = true }
percent-encoding = { version = "2.3.1", optional = true }
which = { version = "6.0.1", optional = true }
base64 = { version = "0.22.1", optional = true }

[target.'cfg(target_family = "wasm")'.dependencies]
wasm-bindgen = "0.2.92"
serde-wasm-bindgen = "0.6.5"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = [
  "default-config",
  "minify-included-strings",

  "stdin",

  "string-location",
  "string-matcher",
  "string-modification",
  "string-source",

  "regex",

  "glob",

  "commands",

  "http",
  "advanced-requests",

  "cache-redirects"
]

# Include default-config.json in the binary.
default-config = ["dep:const-str"]
# Replace all whitepace in the default config with just one space.
minify-included-strings = []

# Allow reading URLs from STDIN.
stdin = ["dep:atty"]

# Enables [`types::StringLocation`].
string-location = []
# Enables [`types::StringMatcher`].
string-matcher = []
# Enables [`types::StringModification`].
string-modification = ["dep:percent-encoding", "dep:base64"]
# Enables [`types::StringSource`].
string-source = []

# Enables [`url_cleaner::glue::RegexWrapper`].
regex = ["dep:regex", "dep:regex-syntax"]

# Enables [`url_cleaner::glue::GlobWrapper`].
glob = ["dep:glob"]

# Enables [`url_cleaner::glue::CommandWrapper`].
commands = ["dep:which"]

# Enables HTTP stuff. DOES NOT WORK ON WASM.
http = ["dep:reqwest"]
# Enables [`types::RequestConfig`].
advanced-requests = ["http", "reqwest/json", "reqwest/cookies"]

# Enables caching various operations.
cache = []
# Read and write the result of [`url_cleaner::types::Mapper::ExpandShortLink`] from and to redirect-cache.txt.
cache-redirects = ["cache"]

# Print debug info at various points.
debug = []

# https://stackoverflow.com/a/54842093/10720231
[profile.release]
opt-level = 3     # 3 gives +30% size and -20% time compared to 'z'
lto = true        # Enable link-time optimization
codegen-units = 1 # Reduce number of codegen units to increase optimizations
panic = 'abort'   # Abort on panic
strip = true      # Strip symbols from binary*

[lints.rust]
missing_docs = "warn"
missing_debug_implementations = "deny"
unsafe_code = "forbid"
unused_import_braces = "warn"

[lints.clippy]
unwrap_used = "deny"
expect_used = "warn" # "force-warn" doesn't work in clippy???
missing_errors_doc = "deny"
missing_panics_doc = "deny"
missing_safety_doc = "deny"
perf = { level = "warn", priority = -1 }
arithmetic_side_effects = "warn"
cargo_common_metadata = "warn"
todo = "warn"
enum_variant_names = "allow"
missing_const_for_fn = "warn"
missing_docs_in_private_items = "warn"
allow_attributes_without_reason = "warn"
dbg_macro = "warn"
indexing_slicing = "deny"
