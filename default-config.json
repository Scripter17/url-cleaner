{
	"params": {
		"vars": {
			"twitter-embed-domain": "vxtwitter.com",
			"breezewiki-domain": "breezewiki.com"
		},
		"http_client_config": {
			"default_headers": {
				"user-agent": "curl/8.2.1",
				"sec-gpc": "1",
				"dnt": "1"
			},
			"referer": false
		}
	},
	"tests": [
		{
			"expectations": [
				{"before": "https://x.com?t=a&s=b", "after": "https://twitter.com/"},
				{"before": "https://example.com?fb_action_ids&mc_eid&ml_subscriber_hash&oft_ck&s_cid&unicorn_click_id", "after": "https://example.com/"},
				{"before": "https://www.amazon.ca/UGREEN-Charger-Compact-Adapter-MacBook/dp/B0C6DX66TN/ref=sr_1_5?crid=2CNEQ7A6QR5NM&keywords=ugreen&qid=1704364659&sprefix=ugreen%2Caps%2C139&sr=8-5&ufe=app_do%3Aamzn1.fos.b06bdbbe-20fd-4ebc-88cf-fa04f1ca0da8", "after": "https://www.amazon.ca/UGREEN-Charger-Compact-Adapter-MacBook/dp/B0C6DX66TN"},
				{"before": "http://example.com", "after": "https://example.com/"},
				{"before": "https://https//example1.com/example2.com/abc", "after": "https://example2.com/abc"},
				{"before": "https://http//www.deviantart.com/user.deviantart.com/gallery", "after": "https://deviantart.com/user/gallery"}
			]
		},
		{
			"params_diff": {"flags": ["minimize"]},
			"expectations": [
				{"before": "https://www.amazon.ca/UGREEN-Charger-Compact-Adapter-MacBook/dp/B0C6DX66TN/ref=sr_1_5?crid=2CNEQ7A6QR5NM&keywords=ugreen&qid=1704364659&sprefix=ugreen%2Caps%2C139&sr=8-5&ufe=app_do%3Aamzn1.fos.b06bdbbe-20fd-4ebc-88cf-fa04f1ca0da8", "after": "https://www.amazon.ca/dp/B0C6DX66TN"}
			]
		},
		{
			"params_diff": {"vars": {"tor2web-suffix": "example"}, "flags": ["tor2web"]},
			"expectations": [{"before": "https://example.onion", "after": "https://example.onion.example"}]
		},
		{
			"params_diff": {"flags": ["tor2web2tor"]},
			"expectations": [
				{"before": "https://example.onion.com"  , "after": "https://example.onion"},
				{"before": "https://example.onion.co.uk", "after": "https://example.onion"}
			]
		},
		{
			"params_diff": {"flags": ["unbreezewiki"]},
			"expectations": [{"before": "https://antifandom.com/tardis/wiki/Genocide", "after": "https://tardis.fandom.com/wiki/Genocide"}]
		},
		{
			"params_diff": {"flags": ["breezewiki"]},
			"expectations": [
				{"before": "https://antifandom.com/tardis/wiki/Genocide", "after": "https://breezewiki.com/tardis/wiki/Genocide"},
				{"before": "https://tardis.fandom.com/wiki/Genocide"    , "after": "https://breezewiki.com/tardis/wiki/Genocide"}
			]
		},
		{
			"params_diff": {"flags": ["unmobile"]},
			"expectations": [{"before": "https://en.m.wikipedia.org/wiki/Self-immolation_of_Aaron_Bushnell", "after": "https://en.wikipedia.org/wiki/Self-immolation_of_Aaron_Bushnell"}]
		},
		{
			"comment": "Verify weird inputs cause no issues",
			"expectations": [
				{"before": "https://127.0.0.1", "after": "https://127.0.0.1"},
				{"before": "https://com"      , "after": "https://com"},
				{"before": "ftp://127.0.0.1"  , "after": "ftp://127.0.0.1"},
				{"before": "file://a/b/c"     , "after": "file://a/b/c"}
			]
		}
	],
	"rules": [
		{
			"RepeatUntilNonePass": {
				"rules": [
					{
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-https"}},
							{"PartIs": {"part": "Scheme", "value": "http"}}
						]},
						"mapper": {"SetPart": {"part": "Scheme", "value": "https"}}
					},



					{
						"condition": {"Any": [
							{
								"HostIsOneOf": [
									"t.co", "bit.ly", "bitly.com", "pixiv.me", "tr.ee", "redd.it", "pin.it", "linkr.it",
									"cfl.re", "goo.gl", "ow.ly", "shorturl.at", "e.emailalerts.cnn.com", "a.co", "mzl.la",
									"shorturl.at", "www.shorturl.at", "bbc.in"
								]
							},
							{"All": [
								{"QualifiedDomain": "pawoo.net"},
								{"PartIs": {"part": {"PathSegment": 0}, "value": "oauth_authentications"}}
							]},
							{"All": [
								{"QualifiedDomain": "api.pinterest.com"},
								{"PartIs": {"part": {"PathSegment": 0}, "value": "url_shortener"}}
							]},
							{"All": [
								{"QualifiedDomain": "allmylinks.com"},
								{"PathIs": "/link/out"}
							]}
						]},
						"mapper": {
							"ExpandShortLink": {
								"http_client_config_diff": {
									"redirect_policy": "None"
								}
							}
						}
					},



					{
						"condition": {"Any": [
							{"All": [
								{"MaybeWWWDomain": "pixiv.net"},
								{"PathIs": "/jump.php"}
							]},
							{"All": [
								{"UnqualifiedDomain": "deviantart.com"},
								{"PathIs": "/users/outgoing"}
							]},
							{"All": [
								{"QualifiedDomain": "api.linkr.bio"},
								{"PathIs": "/callbacks/go"}
							]}
						]},
						"mapper": {"TryElse": {
							"try": {"GetUrlFromQueryParam": "url"},
							"else": { "SetPart": {
								"part": "Whole",
								"value": {"Modified": {"source": {"Part": "Query"}, "modification": "URLDecode"}}
							}}
						}}
					},



					{
						"condition": {"All": [
							{"QualifiedDomain": "subscribestar.adult"},
							{"PathIs": "/away"}
						]},
						"mapper": {
							"SetPart": {
								"part": "Whole",
								"value": {
									"Modified": {
										"source": {"Part": {"QueryParam": "url"}},
										"modification": {"All": [
											{"Replace": {"find": "\n", "replace": ""}},
											"Base64DecodeUrlSafe"
										]}
									}
								}
							}
						}
					},



					{
						"condition": {"QualifiedDomain": "t.umblr.com"},
						"mapper": {"GetUrlFromQueryParam": "z"}
					},



					{
						"condition": {"Any": [
							{"All": [
								{"MaybeWWWDomain": "steamcommunity.com"},
								{"PartIs": {"part": {"PathSegment": 0}, "value": "linkfilter"}}
							]},
							{"QualifiedDomain": "l.threads.com"}
						]},
						"mapper": {"GetUrlFromQueryParam": "u"}
					},



					{
						"condition": {"All": [
							{"MaybeWWWDomain": "lnk.bio"},
							{"PathIs": "/go"}
						]},
						"mapper": {"GetUrlFromQueryParam": "d"}
					},



          {
						"condition": {"All": [
							{"UnqualifiedAnyTld": "google"},
							{"PathIs": "/url"}
						]},
						"mapper": {"GetUrlFromQueryParam": "q"}
					},



					{
						"condition": {"QualifiedDomain": "preview.tinyurl.com"},
						"mapper": {"All": [
							{"SetPart": {"part": "Subdomain", "value": null}},
							{"SetPart": {"part": {"BeforePathSegment": 0}, "value": "preview"}}
						]}
					},
					{
						"condition": {"All": [
							{"MaybeWWWDomain": "tinyurl.com"},
							{"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "preview"}}},
							{"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "app"}}}
						]},
						"mapper": {"SetPart": {"part": {"BeforePathSegment": 0}, "value": "preview"}}
					},
					{
						"condition": {"All": [
							{"MaybeWWWDomain": "tinyurl.com"},
							{"PartIs": {"part": {"PathSegment": 0}, "value": "preview"}}
						]},
						"mapper": {"SetPart": {
							"part": "Whole",
							"value": {"Modified": {
								"source": {"HttpRequest": {}},
								"modification": {"RegexCaptures": {
									"regex": "let url = \\\"(.+)\\\"",
									"replace": "$1"
								}}
							}}
						}}
					},



					{
						"condition": {"UnqualifiedDomain": "href.li"},
						"mapper": {
							"SetPart": {
								"part": "Whole",
								"value": {
									"Modified": {
										"source": {"Part": "Query"},
										"modification": "URLDecode"
									}
								}
							}
						}
					}
				]
			}
		},



		{
			"CommonCondition": {
				"condition": {"Not": {"FlagIsSet": "no-unmangle"}},
				"rules": [
					{
						"comment-1": "https://https//abc.example1.com/def.example2.com/ghi -> https://def.example2.com/ghi",
						"comment-2": "https://https//abc.example1.com/user/def.example2.com/ghi unchanged",
						"condition": {"All": [
							{"HostIsOneOf": ["http", "https"]},
							{"PartContains": {"part": {"PathSegment": 2}, "value": "."}}
						]},
						"mapper": {"All": [
							{"CopyPart": {"from": {"PathSegment": 2}, "to": "Host"}},
							{"CopyPart": {"from": {"PartSegments": {"part": "Path", "split": "/", "start": 4}}, "to": "Path"}}
						]}
					},
					{
						"comment-1": "https://https//abc.example1.com/example2.com/ghi unchanged",
						"comment-2": "https://https//abc.example1.com/user/example2.com/ghi -> https://def.example2.com/ghi",
						"condition": {"All": [
							{"HostIsOneOf": ["http", "https"]},
							{"Not": {"PartContains": {"part": {"PathSegment": 2}, "value": "."}}},
							{"PartContains": {"part": {"PathSegment": 3}, "value": "."}}
						]},
						"mapper": {"All": [
							{"CopyPart": {"from": {"PathSegment": 3}, "to": "Host"}},
							{"CopyPart": {"from": {"PartSegments": {"part": "Path", "split": "/", "start": 5}}, "to": "Path"}}
						]}
					},
					{
						"comment": "https://example1.com/https://example2.com/user -> https://example2.com/abc",
						"condition": {"Any": [
							{"PartContains": {"part": "Path", "where": "Start", "value": "/http:"}},
							{"PartContains": {"part": "Path", "where": "Start", "value": "/https:"}}
						]},
						"mapper": {"SetPart": {
							"part": "Whole",
							"value": {"Modified": {"source": {"Part": "Path"}, "modification": {"StripPrefix": "/"}}}
						}}
					},
					{
						"comment": "https://example1.com/profile/https://example2.com/profile/user -> https://example2.com/profile/user",
						"comment2": "The general case requires conditions and mappers to talk to each other and would break the WayBack machine.",
						"condition": {"Any": [
							{"PartIs": {"part": {"PathSegment": 1}, "value": "http:"}},
							{"PartIs": {"part": {"PathSegment": 1}, "value": "https:"}}
						]},
						"mapper": {
							"SetPart": {
								"part": "Whole",
								"value": {"Part": {"PartSegments": {"part": "Path", "split": "/", "start": 2, "end": null}}}
							}
						}
					},
					{
						"comment": "https://profile.example.com.example.com -> https://profile.example.com",
						"condition": {
							"TreatErrorAsFail": {"PartContains": {
								"part": {"PartSegments": {"part": "Domain", "split": ".", "start": 1, "end": null}},
								"where": "Start",
								"value": {"Join": {"sources": [{"Part": "NotSubdomain"}, {"String": "."}]}}
							}}
						},
						"mapper": {"SetPart": {"part": "NotSubdomain", "value": null}}
					},



					{
						"condition": {"All": [
							{"QualifiedDomain": "bsky.app"},
							{"PartContains": {"part": "Path", "where": "End", "value": ".bsky"}}
						]},
						"mapper": {"ModifyPart": {"part": "Path", "how": {"Append": ".social"}}}
					},
					{
						"condition": {"All": [
							{"QualifiedDomain": "bsky.app"},
							{"PartIs": {"part": {"PathSegment": 0}, "value": "profile"}},
							{"Not": {"PartContains": {"part": {"PathSegment": 1}, "value": "."}}},
							{"Not": {"PartContains": {"part": {"PathSegment": 1}, "value": ":"}}}
						]},
						"mapper": {"ModifyPart": {"part": {"PathSegment": 1}, "how": {"Append": ".bsky.social"}}}
					}
				]
			}
		},



		{
			"condition": {"All": [
				{"Not": {"FlagIsSet": "no-https-upgrade"}},
				{"PartIs": {"part": "Scheme", "value": "http"}}
			]},
			"mapper": {"SetPart": {"part": "Scheme", "value": "https"}}
		},



		{
			"CommonCondition": {
				"condition": {"FlagIsSet": "unmobile"},
				"rules": [
					{
						"condition": {"All": [
							{"Any": [
								{"PartIs": {"part": {"DomainSegment": 0}, "value": "m"}},
								{"PartIs": {"part": {"DomainSegment": 0}, "value": "mobile"}}
							]},
							{"Not": {"HostIsOneOf": ["mobile.tumblr.com", "mobile.deviantart.com"]}}
						]},
						"mapper": {"SetPart": {"part": {"DomainSegment": 0}, "value": null}}
					},
					{
						"condition": {"Any": [
							{"PartIs": {"part": {"DomainSegment": 1}, "value": "m"}},
							{"PartIs": {"part": {"DomainSegment": 1}, "value": "mobile"}}
						]},
						"mapper": {"SetPart": {"part": {"DomainSegment": 1}, "value": null}}
					}
				]
			}
		},



		{
			"PartMap": {
				"comment": "The first group is only known to be fine for MaybeWWWDomain. Arbitrary subdomains may cause semantic issues.",
				"part": "NotSubdomain",
				"map": {
					"theonion.com" : "RemoveQuery",
					"teespring.com": "RemoveQuery",
					"instagram.com": "RemoveQuery",
					"vxtwitter.com": {"SetHost": "twitter.com"},
					"fixvx.com"    : {"SetHost": "twitter.com"},
					"fxtwitter.com": {"SetHost": "twitter.com"},
					"x.com"        : {"SetHost": "twitter.com"},
					"youtube.com"  : {"RemoveQueryParams": ["si", "feature"]},
					"youtu.be"     : {"All": [
						{"SetHost" : "youtube.com"},
						{"CopyPart": {"from": {"PathSegment": 0}, "to": {"QueryParam": "v"}}},
						{"SetPart" : {"part": "Path", "value": "watch"}},
						{"RemoveQueryParams": ["si", "feature"]}
					]},
					"instagram.com": {"RemoveQueryParams": ["igshid", "igsh"]},
					"threads.net"  : {"RemoveQueryParams": ["igshid", "igsh"]},
					"stackoverflow.com" : {"RemoveQueryParams": ["so_medium", "so_source", "c"]},
					"duckduckgo.com"    : {"RemoveQueryParams": ["t", "atb", "ia"]},
					"washingtonpost.com": {"RemoveQueryParams": ["itid"]},
					"at.tumblr.com"     : {"All": [
						{"SetHost": "www.tumblr.com"},
						{"SetPart": {"part": {"PathSegment": 1}, "value": null}},
						"RemoveQuery"
					]},
					"cnn.com": {"RemoveQueryParams": ["bt_ee", "bt_ts"]},
					"facebook.com": {"RemoveQueryParams": ["fs", "s", "mibextid"]},
					"bbc.com": {"RemoveQueryParamsMatching": {"Contains": {"where": "Start", "value": "at_"}}},
					"linktr.ee": {"RemoveQueryParams": ["ltsid"]},
					"github.com": {"RemoveQueryParams": ["notification_referrer_id"]},
					"theguardian.com": {"All": [
						{"RemoveQueryParams": ["CMP"]},
						{"SetPart": {"part": "Fragment", "value": null}}
					]},
					"roblox.com": {"AllowQueryParams": ["keyword", "Keyword"]},
					"hp.com": {"RemoveQueryParams": ["jumpid"]},
					"lenovo.com": {"RemoveQueryParams": ["IPromoID"]},
					"loblaws.ca": {"RemoveQueryParams": ["navid", "icid", "icta"]},

					"acer.com": {"RemoveQueryParamsMatching": {"Contains": {"where": "Start", "value": "internal_"}}},
					"steampowered.com": {"RemoveQueryParams": ["snr"]},
					"yahoo.com": {"RemoveQueryParams": ["p", "src", "pspid", "activity", ".src", "specId", "y"]},
					"bell.ca": {"RemoveQueryParams": ["INT"]},
					"fxdeviantart.com": {"SetPart": {"part": "NotSubdomain", "value": "deviantart.com"}}
				}
			}
		},



		{
			"condition": {"All": [
				{"FlagIsSet": "minimize"},
				{"PartIs": {"part": {"PathSegment": 1}, "value": "ip"}},
				{"UnqualifiedAnyTld": "walmart"}
			]},
			"mapper": {"SetPart": {"part": {"PathSegment": 2}, "value": null}}
		},



		{
			"condition": {"UnqualifiedAnyTld": "bestbuy"},
			"mapper": {"RemoveQueryParams": ["icmp"]}
		},



		{
			"condition": {"All": [
				{"MaybeWWWDomain": "pixiv.net"},
				{"PathIs": "/member.php"}
			]},
			"mapper": {"All": [
				{"SetPart": {"part": "Path", "value": "/users"}},
				{"CopyPart": {"from": {"QueryParam": "id"}, "to": "NextPathSegment"}},
				"RemoveQuery"
			]}
		},



		{
			"CommonCondition": {
				"condition": {"UnqualifiedDomain": "tumblr.com"},
				"rules": [
					{
						"condition": {"QueryHasParam": "redirect_to"},
						"mapper": {"All": [
							{"GetPathFromQueryParam": "redirect_to"},
							"RemoveQuery"
						]}
					},
					{
						"condition": {"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "search"}}},
						"mapper": "RemoveQuery"
					},
					{
						"condition": {"PartIs": {"part": {"PathSegment": 0}, "value": "login_required"}},
						"mapper": {"SetPart": {"part": {"PathSegment": 0}, "value": null}}
					}
				]
			}
		},



		{
			"condition": {"All": [
				{"PathIs": "/search"},
				{"MaybeWWWAnyTld": "google"}
			]},
			"mapper": {"AllowQueryParams": ["hl", "q", "tbm", "p"]}
		},
		{
			"condition": {"All": [
				{"PathIs": "/setprefs"},
				{"MaybeWWWAnyTld": "google"}
			]},
			"mapper": {"RemoveQueryParams": ["sa", "ved"]}
		},



		{
			"condition": {"All": [
				{"FlagIsSet": "youtube-unshort"},
				{"MaybeWWWDomain": "youtube.com"},
				{"PartIs": {"part": {"PathSegment": 0}, "value": "shorts"}}
			]},
			"mapper": {"All": [
				{"CopyPart": {"from": {"PathSegment": 1}, "to": {"QueryParam": "v"}}},
				{"SetPart": {"part": "Path", "value": "watch"}}
			]}
		},



		{
			"comment": "Discord embeds images using dedicated \"external images\" server(s). This gets the original image.",
			"condition": {"All": [
				{"FlagIsSet": "discord-unexternal"},
				{"Any": [
					{"QualifiedDomain": "images-ext-1.discordapp.net"},
					{"QualifiedDomain": "images-ext-2.discordapp.net"},
					{"QualifiedDomain": "images-ext-3.discordapp.net"}
				]}
			]},
			"mapper": {"All": [
				{"CopyPart": {"from": {"PathSegment": 2}, "to": "Scheme"}},
				{"CopyPart": {"from": {"PathSegment": 3}, "to": "Host"}},
				{"CopyPart": {"from": {"PartSegments": {"part": "Path", "split": "/", "start": 5}}, "to": "Path"}},
				"RemoveQuery"
			]}
		},



		{
			"condition": {"All": [
				{"QualifiedDomain": "danbooru.donmai.us"},
				{"PartIs": {"part": {"PathSegment": 0}, "value": "posts"}}
			]},
			"mapper": {"RemoveQueryParams": ["q"]}
		},
		{
			"condition": {"All": [
				{"QualifiedDomain": "gelbooru.com"},
				{"PartIs": {"part": {"QueryParam": "page"}, "value": "post"}}
			]},
			"mapper": {"RemoveQueryParams": ["tags"]}
		},



		{
			"condition": {"All": [
				{"QualifiedDomain": "inkbunny.net"},
				{"PathIs": "/submissionsviewall.php"}
			]},
			"mapper": {"RemoveQueryParams": ["rid"]}
		},



		{
			"CommonCondition": {
				"condition": {"QualifiedDomain": "twitter.com"},
				"rules": [
					{
						"condition": {"PathIs": "/i/flow/login"},
						"mapper": {"All": [
							{"CopyPart": {"from": {"QueryParam": "redirect_after_login"}, "to": "Path"}},
							{"SetPart": {"part": "Query", "value": null}}
						]}
					},
					{
						"condition": {"Not": {"PathIs": "/search"}},
						"mapper": "RemoveQuery"
					},
					{
						"condition": {"PathIs": "/search"},
						"mapper": {"AllowQueryParams": ["q", "f", "pf", "lf"]}
					},
					{
						"condition": {"All": [
							{"FlagIsSet": "discord-compatibility"},
							{"PartIs": {"part": {"PathSegment": 1}, "value": "status"}}
						]},
						"mapper": {"SetPart": {"part": "Host", "value": {"Var": "twitter-embed-domain"}}}
					}
				]
			}
		},



		{
			"condition": {"All": [
				{"UnqualifiedDomain": "deviantart.com"},
				{"Not": {"PartIs": {"part": "Subdomain", "value": "www"}}},
				{"Not": {"PartIs": {"part": "Subdomain", "value": ""}}}
			]},
			"mapper": {"All": [
				{"CopyPart": {"from": "Subdomain", "to": {"BeforePathSegment": 0}}},
				{"SetPart": {"part": "Subdomain", "value": null}}
			]}
		},



		{
			"condition": {"All": [
				{"Any": [
					{"FlagIsSet": "breezewiki"},
					{"FlagIsSet": "unbreezewiki"}
				]},
				{"HostIsOneOf": [
					"breezewiki.com", "antifandom.com", "breezewiki.pussthecat.org", "bw.hamstro.dev",
					"bw.projectsegfau.lt", "breeze.hostux.net", "bw.artemislena.eu", "nerd.whatever.social",
					"breezewiki.frontendfriendly.xyz", "breeze.nohost.network", "breeze.whateveritworks.org",
					"z.opnxng.com", "breezewiki.hyperreal.coffee", "breezewiki.catsarch.com",
					"breeze.mint.lgbt", "breezewiki.woodland.cafe", "breezewiki.nadeko.net",
					"bw.skunky7dhv7nohsoalpwe3sxfz3fbkad7r3wk632riye25vqm3meqead.onion",
					"breezewiki.nadekonfkhwlxwwk4ycbvq42zvcjmvo5iakl4tajojjwxd4a5dcetuyd.onion"
				]},
				{"Not": {"PathIs": "/"}}
			]},
			"mapper": {"All": [
				{"SetHost": "fandom.com"},
				{"CopyPart": {"from": {"PathSegment": 0}, "to": "Subdomain"}},
				{"SetPart": {"part": {"PathSegment": 0}, "value": null}}
			]}
		},
		{
			"condition": {"All": [
				{"FlagIsSet": "breezewiki"},
				{"UnqualifiedDomain": "fandom.com"}
			]},
			"mapper": {"All": [
				{"CopyPart": {"from": "Subdomain", "to": {"BeforePathSegment": 0}}},
				{"SetPart": {"part": "Host", "value": {"Var": "breezewiki-domain"}}}
			]}
		},



		{
			"condition": {"All": [
				{"UnqualifiedDomain": "reddit.com"},
				{"Not": {"PathIs": "/search"}}
			]},
			"mapper": {"AllowQueryParams": ["f"]}
		},



		{
			"CommonCondition": {
				"condition": {"UnqualifiedAnyTld": "amazon"},
				"rules": [
					{
						"condition": {"PartContains": {"part": "Path", "where": "Start", "value": "/gp/offer-listing/"}},
						"mapper": {"All": [
							{"SetPart": {"part": {"PathSegment": 0}, "value": "dp"}},
							{"SetPart": {"part": {"PathSegment": 1}, "value": null}},
							{"SetPart": {"part": {"QueryParam": "aod"}, "value": "1"}}
						]}
					},
					{
						"condition": {"All": [
							{"FlagIsSet": "minimize"},
							{"PartIs": {"part": {"PathSegment": 1}, "value": "dp"}}
						]},
						"mapper": {"RemovePathSegments": [0, 3]}
					},
					{
						"condition": {"Any": [
							{"PartIs": {"part": {"PathSegment": 0}, "value": "dp"}},
							{"PartIs": {"part": {"PathSegment": 1}, "value": "dp"}}
						]},
						"mapper": {"AllowQueryParams": ["aod"]}
					},
					{
						"condition": {"PathIs": "/s"},
						"mapper": {"AllowQueryParams": ["k", "i", "rh", "bbn"]}
					},
					{
						"condition": {"PartContains": {"part": {"PathSegment": -1}, "where": "Start", "value": "ref="}},
						"mapper": {"SetPart": {"part": {"PathSegment": -1}, "value": null}}
					},
					{
						"condition": {"All": [
							{"Any": [
								{"PartIs": {"part": {"PathSegment": 0}, "value": "dp"}},
								{"PartIs": {"part": {"PathSegment": 1}, "value": "dp"}}
							]},
							{"PartContains": {"part": {"PathSegment": -1}, "where": "Anywhere", "value": "-"}},
							{"PartMatches": {"part": {"PathSegment": -1}, "matcher": {"OnlyTheseChars": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-"]}}}
						]},
						"mapper": {"SetPart": {"part": {"PathSegment": -1}, "value": null}}
					},
					{
						"condition": {"PathIs": "/gp/buyagain"},
						"mapper": {"AllowQueryParams": ["ats"]}
					},
					{
						"condition": {"Any": [
							{"PathIs": "/gp/customer-reviews"},
							{"PartIs": {"part": {"PathSegment": 0}, "value": "product-reviews"}}
						]},
						"mapper": "RemoveQuery"
					},
					{
						"condition": "Always",
						"mapper": {"RemoveQueryParams": ["ref", "ref_", "node", "ie"]}
					}
				]
			}
		},



		{
			"condition": {"All": [
				{"MaybeWWWDomain": "cnn.com"},
				{"PartContains": {"part": {"PathSegment": -1}, "value": "h_", "where": "Start"}}
			]},
			"mapper": {"SetPart": {"part": {"PathSegment": -1}, "value": null}}
		},



		{
			"condition": {"All": [
				{"UnqualifiedDomain": "bell.ca"},
				{"PartContains": {"part": "Fragment", "where": "Start", "value": "INT="}}
			]},
			"mapper": {"SetPart": {"part": "Fragment", "value": null}}
		},



		{
			"condition": {"FlagIsSet": "onion-location"},
			"mapper": {"IgnoreError":
				{"SetPart": {
					"part": "Origin",
					"value": {"ExtractPart": {
						"part": "Origin",
						"source": {"HttpRequest": {"response_handler": {"Header": "Onion-Location"}}}
					}}
				}}
			}
		},
		{
			"condition": {"All": [
				{"Any": [
					{"FlagIsSet": "tor2web2tor"},
					{"FlagIsSet": "tor2web"}
				]},
				{"PartIs": {"part": "NotSubdomainNotSuffix", "value": "onion"}}
			]},
			"mapper": {"SetPart": {"part": "DomainSuffix", "value": null}}
		},
		{
			"condition": {"All": [
				{"FlagIsSet": "tor2web"},
				{"PartIs": {"part": {"DomainSegment": -1}, "value": "onion"}}
			]},
			"mapper": {"SetPart": {"part": "NextDomainSegment", "value": {"Var": "tor2web-suffix"}}}
		},



		{
			"condition": {"All": [
				{"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "search"}}},
				{"UnqualifiedAnyTld": "pinterest"}
			]},
			"mapper": "RemoveQuery"
		},



		{
			"comment": "The query paramaters to always remove.",
			"FireFox-Source": "https://firefox-source-docs.mozilla.org/toolkit/components/antitracking/anti-tracking/query-stripping/index.html",
			"Brave-Source": "https://github.com/brave/brave-core/blob/master/components/query_filter/utils.cc",
			"AdGuard-source": "https://github.com/AdguardTeam/AdguardFilters/blob/master/TrackParamFilter/sections/general_url.txt",
			"condition": "Always",
			"mapper": {"All": [
				{
					"RemoveQueryParams": [
						"action_object_map", "action_ref_map", "action_type_map", "adfrom", "adjust_adgroup", "adjust_campaign", 
						"adjust_creative", "adjust_referrer", "adjust_tracker", "adjust_tracker_limit", "admitad_uid", "af_ad", "af_adset", 
						"af_click_lookback", "af_force_deeplink", "af_xp", "aiad_clid", "asgtbndr", "at_campaign", "at_campaign_type", 
						"at_creation", "/^at_custom/", "at_emailtype", "at_link", "at_link_id", "at_link_origin", "at_link_type", "at_medium", 
						"at_ptr_name", "at_recipient_id", "at_recipient_list", "at_send_date", "awc", "_branch_match_id", "_branch_referrer", 
						"bsft_aaid", "bsft_clkid", "bsft_eid", "bsft_ek", "bsft_mid", "bsft_uid", "cjdata", "cjevent", "_clde", "_cldee", 
						"click", "cm_cr", "cm_me", "/^cm_mmc/", "cmpid", "cuid", "cx_click", "cx_recsOrder", "cx_recsWidget", "dclid", 
						"dpg_campaign", "dpg_content", "dpg_medium", "dpg_source", "ebisAdID", "erid", "et_rid", "external_click_id", 
						"famad_xuid", "fb_action_ids", "fb_action_types", "fbclid", "fb_comment_id", "fb_ref", "fb_source", "_ga", 
						"gad_source", "gbraid", "gci", "gclid", "gclsrc", "_gl", "gps_adid", "guccounter", "guce_referrer", 
						"guce_referrer_sig", "hsa_acc", "hsa_ad", "hsa_cam", "hsa_grp", "hsa_kw", "hsa_la", "hsa_mt", "hsa_net", "hsa_ol", 
						"hsa_src", "hsa_tgt", "hsa_ver", "hsCtaTracking", "hsctatracking", "_hsenc", "__hsfp", "__hssc", "__hstc", "icid", 
						"iclid", "id", "__io_lv", "_io_session_id", "ir_adid", "ir_campaignid", "irclickid", "irgwc", "ir_partnerid", 
						"is_retargeting", "itm_campaign", "itm_content", "itm_medium", "itm_source", "itm_term", "jmtyClId", "key", "_kx", 
						"maf", "mc_eid", "message", "mindbox", "mindbox-click-id", "mindbox-message-key", "mkt_tok", "ml_subscriber", 
						"ml_subscriber_hash", "msclkid", "mt_link_id", "mtm_campaign", "mtm_cid", "mtm_content", "mtm_group", "mtm_keyword", 
						"mtm_medium", "mtm_placement", "mtm_source", "nx_source", "oft_c", "oft_ck", "oft_d", "oft_id", "oft_ids", "oft_k", 
						"oft_lk", "oft_sk", "oly_anon_id", "oly_enc_id", "_ope", "_openstat", "oprtrack", "pk_campaign", "pk_cid", "pk_medium", 
						"pk_source", "pk_vid", "rb_clickid", "ref", "referer", "rtkcid", "/^__s", "__s", "s_cid", "_sgm_action", 
						"_sgm_campaign", "_sgm_source", "sms_click", "sms_source", "sms_uph", "source", "spot_im_redirect_source", "srsltid", 
						"sscid", "ss_email_id", "Tcsack", "tduid", "_trkparms", "_trksid", "ttclid", "twclid", "unicorn_click_id", 
						"user_email_address", "usqp", "utm_ad", "utm_adgroup", "utm_affiliate", "utm_brand", "utm_campaign", "utm_campaignid", 
						"utm_channel", "utm_cid", "utm_content", "utm_creative", "utm_emcid", "utm_emmid", "utm_id", "utm_id_", "utm_keyword", 
						"utm_medium", "utm_name", "utm_place", "utm_product", "utm_pubreferrer", "utm_reader", "utm_referrer", "utm_serial", 
						"utm_servlet", "utm_session", "utm_siteid", "utm_social", "utm_social-type", "utm_source", "utm_supplier", "utm_swu", 
						"utm_term", "utm_umguk", "utm_userid", "utm_viz_id", "vc_lpp", "vero_conv", "vero_id", "vgo_ee", "vsm_cid", "vsm_pid", 
						"vsm_type", "wbraid", "wickedid", "wt_mc", "xtor", "yclid", "ymclid", "ymid", "ysclid", "_zucks_suid"
					]
				},
				{"RemoveQueryParamsMatching": {"Contains": {"where": "Start", "value": "utm_"}}}
			]}
		}
	]
}
