{
	"params": {
		"flags": [],
		"vars": {
			"twitter-embed-domain": "vxtwitter.com",
			"breezewiki-domain": "breezewiki.com"
		},
		"sets": {
			"breezewiki-hosts": [
				"antifandom.com", "breeze.hostux.net", "breeze.mint.lgbt", "breeze.nohost.network", "breeze.whateveritworks.org",
				"breezewiki.catsarch.com", "breezewiki.com", "breezewiki.frontendfriendly.xyz", "breezewiki.hyperreal.coffee", "breezewiki.nadeko.net",
				"breezewiki.nadekonfkhwlxwwk4ycbvq42zvcjmvo5iakl4tajojjwxd4a5dcetuyd.onion", "breezewiki.pussthecat.org", "breezewiki.woodland.cafe",
				"bw.artemislena.eu", "bw.hamstro.dev", "bw.projectsegfau.lt", "bw.skunky7dhv7nohsoalpwe3sxfz3fbkad7r3wk632riye25vqm3meqead.onion",
				"nerd.whatever.social", "z.opnxng.com"
			],
			"shortlink-hosts": [
				"a.co", "abc7.la", "adobe.ly", "aje.io", "amzn.asia", "amzn.to", "apple.co", "bbc.in", "bit.ly", "bitly.com", "bityl.co", "blizz.ly",
				"bloom.bg", "boxd.it", "buff.ly", "buff.ly", "buff.ly", "cbsn.ws", "cfl.re", "chn.ge", "chng.it", "cnb.cx", "cnb.cx", "cnn.it",
				"cnn.it", "cos.lv", "cos.lv", "cutt.ly", "cutt.ly", "db.tt", "dcdr.me", "dis.gd", "dlvr.it", "e.emailalerts.cnn.com", "etsy.me",
				"fal.cn", "fb.me", "flip.it", "forms.gle", "g.co", "go.forbes.com", "go.nasa.gov", "gofund.me", "goo.gl", "goo.su", "gum.co", "hulu.tv",
				"ift.tt", "iwe.one", "k00.fr", "kck.st", "link.animaapp.com", "linkr.it", "lnk.to", "loom.ly", "mzl.la", "n.pr", "nas.cr", "ninten.do",
				"ny.ti", "nyer.cm", "nyti.ms", "nyto.ms", "on.forbes.com", "on.ft.com", "onl.bz", "onl.la", "onl.sc", "operagx.gg", "orlo.uk", "ow.ly",
				"pin.it", "pixiv.me", "play.st", "py.pl", "rb.gy", "rblx.co", "rdbl.co", "redd.it", "reurl.cc", "reut.rs", "rzr.to", "shorturl.at",
				"spoti.fi", "sqex.to", "t.co", "t.ly", "tmz.me", "tr.ee", "trib.al", "wn.nr", "wwdc.io", "xbx.ly", "on.msnbc.com"
			],
			"utps": [
				"Tcsack", "__hsfp", "__hssc", "__hstc", "__io_lv", "__s", "_branch_match_id", "_branch_referrer", "_clde", "_cldee", "_ga",
				"_gl", "_hsenc", "_io_session_id", "_kx", "_ope", "_openstat", "_sgm_action", "_sgm_campaign", "_sgm_source", "_trkparms",
				"_trksid", "_zucks_suid", "action_object_map", "action_ref_map", "action_type_map", "adfrom", "adjust_adgroup", "adjust_campaign",
				"adjust_creative", "adjust_referrer", "adjust_tracker", "adjust_tracker_limit", "admitad_uid", "af_ad", "af_adset", "af_click_lookback",
				"af_force_deeplink", "af_xp", "aiad_clid", "asgtbndr", "at_campaign", "at_campaign_type", "at_creation", "at_emailtype", "at_link",
				"at_link_id", "at_link_origin", "at_link_type", "at_medium", "at_ptr_name", "at_recipient_id", "at_recipient_list", "at_send_date",
				"awc", "bsft_aaid", "bsft_clkid", "bsft_eid", "bsft_ek", "bsft_mid", "bsft_uid", "cjdata", "cjevent", "click", "cm_cr", "cm_me", "cmpid",
				"cuid", "cx_click", "cx_recsOrder", "cx_recsWidget", "dclid", "dpg_campaign", "dpg_content", "dpg_medium", "dpg_source", "ebisAdID",
				"erid", "et_rid", "external_click_id", "famad_xuid", "fb_action_ids", "fb_action_types", "fb_comment_id", "fb_ref", "fb_source",
				"fbclid", "gad_source", "gbraid", "gci", "gclid", "gclsrc", "gps_adid", "guccounter", "guce_referrer", "guce_referrer_sig",
				"hsCtaTracking", "hsa_acc", "hsa_ad", "hsa_cam", "hsa_grp", "hsa_kw", "hsa_la", "hsa_mt", "hsa_net", "hsa_ol", "hsa_src",
				"hsa_tgt", "hsa_ver", "hsctatracking", "icid", "iclid", "intcmp", "ir_adid", "ir_campaignid", "ir_partnerid", "irclickid", "irgwc",
				"is_retargeting", "itm_campaign", "itm_content", "itm_medium", "itm_source", "itm_term", "jmtyClId", "maf", "mc_eid", "message",
				"mindbox", "mindbox-click-id", "mindbox-message-key", "mkt_tok", "ml_subscriber", "ml_subscriber_hash", "msclkid", "mt_link_id",
				"mtm_campaign", "mtm_cid", "mtm_content", "mtm_group", "mtm_keyword", "mtm_medium", "mtm_placement", "mtm_source", "nx_source", "oft_c",
				"oft_ck", "oft_d", "oft_id", "oft_ids", "oft_k", "oft_lk", "oft_sk", "oly_anon_id", "oly_enc_id", "oprtrack", "pk_campaign", "pk_cid",
				"pk_medium", "pk_source", "pk_vid", "rb_clickid", "ref", "referer", "rtkcid", "s_cid", "sms_click", "sms_source", "sms_uph", "source",
				"spot_im_redirect_source", "srsltid", "ss_email_id", "sscid", "tduid", "ttclid", "twclid", "unicorn_click_id", "user_email_address",
				"usqp", "vc_lpp", "vero_conv", "vero_id", "vgo_ee", "vsm_cid", "vsm_pid", "vsm_type", "wbraid", "wickedid", "wt_mc", "xtor", "yclid",
				"ymclid", "ymid", "ysclid"
			],
			"utps-host-whitelist": [],
			"unmangle-path-is-url-host-whitelist": [],
			"unmangle-subdomain-ends-in-not-subdomain-not-subdomain-whitelist": [],
			"https-upgrade-host-blacklist": ["orteil.dashnet.org"]
		},
		"lists": {
			"utp-prefixes": [
				"__s", "at_custom", "cm_mmc", "utm_"
			]
		},
		"http_client_config": {
			"default_headers": {
				"user-agent": "curl/8.2.1",
				"sec-gpc": "1",
				"dnt": "1"
			},
			"referer": false,
			"redirect_policy": "None"
		}
	},
	"tests": [
		{
			"expectations": [
				{"before": "https://x.com?t=a&s=b", "after": "https://x.com/"},
				{"before": "https://example.com?fb_action_ids&mc_eid&ml_subscriber_hash&oft_ck&s_cid&unicorn_click_id", "after": "https://example.com/"},
				{"before": "https://www.amazon.ca/UGREEN-Charger-Compact-Adapter-MacBook/dp/B0C6DX66TN/ref=sr_1_5?crid=2CNEQ7A6QR5NM&keywords=ugreen&qid=1704364659&sprefix=ugreen%2Caps%2C139&sr=8-5&ufe=app_do%3Aamzn1.fos.b06bdbbe-20fd-4ebc-88cf-fa04f1ca0da8", "after": "https://www.amazon.ca/UGREEN-Charger-Compact-Adapter-MacBook/dp/B0C6DX66TN"},
				{"before": "http://example.com", "after": "https://example.com/"},
				{"before": "https://https//example1.com/example2.com/abc", "after": "https://example2.com/abc"},
				{"before": "https://http//www.deviantart.com/user.deviantart.com/gallery", "after": "https://deviantart.com/user/gallery"},
				{"before": "https://tinyurl.com/wp-tinyurl", "after": "https://en.wikipedia.org/wiki/TinyURL"},

				{"before": "https://https//example.com/abc", "after": "https://example.com/abc"},
				{"before": "https://https//example1.com/example2.com/abc", "after": "https://example2.com/abc"},
				{"before": "https://https//example1.com/user/example2.com/abc", "after": "https://example2.com/abc"},

				{"before": "https://127.0.0.1", "after": "https://127.0.0.1"},
				{"before": "https://com"      , "after": "https://com"},
				{"before": "ftp://127.0.0.1"  , "after": "ftp://127.0.0.1"},
				{"before": "file://a/b/c"     , "after": "file://a/b/c"}
			]
		},
		{
			"params_diff": {"flags": ["deadname-twitter"]},
			"expectations": [
				{"before": "https://x.com?t=a&s=b", "after": "https://twitter.com/"}
			]
		},
		{
			"params_diff": {"flags": ["minimize"]},
			"expectations": [
				{"before": "https://www.amazon.ca/UGREEN-Charger-Compact-Adapter-MacBook/dp/B0C6DX66TN/ref=sr_1_5?crid=2CNEQ7A6QR5NM&keywords=ugreen&qid=1704364659&sprefix=ugreen%2Caps%2C139&sr=8-5&ufe=app_do%3Aamzn1.fos.b06bdbbe-20fd-4ebc-88cf-fa04f1ca0da8", "after": "https://www.amazon.ca/dp/B0C6DX66TN"}
			]
		},
		{
			"params_diff": {"vars": {"tor2web-suffix": "example"}, "flags": ["tor2web"]},
			"expectations": [{"before": "https://example.onion", "after": "https://example.onion.example"}]
		},
		{
			"params_diff": {"flags": ["tor2web2tor"]},
			"expectations": [
				{"before": "https://example.onion.com"  , "after": "https://example.onion"},
				{"before": "https://example.onion.co.uk", "after": "https://example.onion"}
			]
		},
		{
			"params_diff": {"flags": ["unbreezewiki"]},
			"expectations": [{"before": "https://antifandom.com/tardis/wiki/Genocide", "after": "https://tardis.fandom.com/wiki/Genocide"}]
		},
		{
			"params_diff": {"flags": ["breezewiki"]},
			"expectations": [
				{"before": "https://antifandom.com/tardis/wiki/Genocide", "after": "https://breezewiki.com/tardis/wiki/Genocide"},
				{"before": "https://tardis.fandom.com/wiki/Genocide"    , "after": "https://breezewiki.com/tardis/wiki/Genocide"}
			]
		},
		{
			"params_diff": {"flags": ["unmobile"]},
			"expectations": [{"before": "https://en.m.wikipedia.org/wiki/Self-immolation_of_Aaron_Bushnell", "after": "https://en.wikipedia.org/wiki/Self-immolation_of_Aaron_Bushnell"}]
		}
	],
	"rules": [
		{
			"RepeatUntilNonePass": {
				"rules": [
					{"PretendFailedCondition": {
						"condition": {"All": [
							{"PartIs": {"part": "Scheme", "value": "http"}},
							{"Not": {"FlagIsSet": "no-https-upgrade"}},
							{"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "https-upgrade-host-blacklist"}}}}
						]},
						"mapper": {"SetPart": {"part": "Scheme", "value": "https"}}
					}},



					{
						"condition": {"MaybeWWWDomain": "gf.me"},
						"mapper": {"All": [
							{"SetHost": "gofundme.com"},
							{"SetPart": {"part": {"BeforePathSegment": 0}, "value": "url_shortener"}}
						]}
					},



					{
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-http"}},
							{"Any": [
	              {"All": [
	              	{"FlagIsSet": "assume-1-dot-2-is-shortlink"},
	              	{"PartMatches": {"part": "Domain", "matcher": {"Regex": "^.\\...$"}}}
	              ]},
								{"StringMatches": {
									"source": {"Modified": {"source": {"Part": "Host"}, "modification": {"StripMaybePrefix": "www."}}},
									"matcher": {"InSet": "shortlink-hosts"}
								}},
								{"StringSourceMap": {
									"source": {"Modified": {"source": {"Part": "Host"}, "modification": {"StripMaybePrefix": "www."}}},
									"map": {
										"pawoo.net"        : {"PartIs": {"part": {"PathSegment": 0}, "value": "oauth_authentications"}},
										"api.pinterest.com": {"PartIs": {"part": {"PathSegment": 0}, "value": "url_shortener"}},
										"allmylinks.com"   : {"PathIs": "/link/out"},
										"gofundme.com"     : {"PartIs": {"part": {"PathSegment": 0}, "value": "url_shortener"}}
									}
								}}
							]}
						]},
						"mapper": {"All": [
							{"IfCondition": {
								"condition": {"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "utps-host-whitelist"}}}},
								"mapper": {
									"RemoveQueryParamsMatching": {"Any": [
										{"InSet": "utps"},
										{"ContainsAnyInList": {"where": "Start", "list": "utp-prefixes"}}
									]
								}}
							}},
							{"ExpandShortLink": {}}
						]}
					},



					{
						"condition": {"StringSourceMap": {
							"source": {"Modified": {"source": {"Part": "Host"}, "modification": {"StripMaybePrefix": "www."}}},
							"map": {
								"pixiv.net"     : {"PathIs": "/jump.php"},
								"deviantart.com": {"PathIs": "/users/outgoing"},
								"api.linkr.bio" : {"PathIs": "/callbacks/go"},
								"sketchfab.com" : {"PartIs": {"part": {"PathSegment": 0}, "value": "s"}}
							}
						}},
						"mapper": {"TryElse": {
							"try": {"SetPart": {
								"part": "Whole",
								"value": {"Modified": {
									"source": {"Part": {"QueryParam": "url"}},
									"modification": {"IgnoreError": "URLDecode"}
								}}
							}},
							"else": { "SetPart": {
								"part": "Whole",
								"value": {"Modified": {"source": {"Part": "Query"}, "modification": "URLDecode"}}
							}}
						}}
					},



					{
						"StringSourceMap": {
							"source": {"Modified": {"source": {"Part": "Host"}, "modification": {"StripMaybePrefix": "www."}}},
							"map": {
								"t.umblr.com": {"GetUrlFromQueryParam": "z"},
								"skfb.ly": {"All": [
									{"SetHost": "sketchfab.com"},
									{"SetPart": {"part": {"BeforePathSegment": 0}, "value": "s"}}
								]},
								"smarturl.it": {"IfCondition": {
									"condition": {"Not": {"FlagIsSet": "no-http"}},
									"mapper": {"All": [
										{"IfCondition": {
											"condition": {"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "utps-host-whitelist"}}}},
											"mapper": {
												"RemoveQueryParamsMatching": {"Any": [
													{"InSet": "utps"},
													{"ContainsAnyInList": {"where": "Start", "list": "utp-prefixes"}}
												]
											}}
										}},
										{"SetPart": {
											"part": "Whole",
											"value": {"Modified": {
												"source": {"HttpRequest": {}},
												"modification": {"All": [
													{"RegexCaptures": {
														"regex": "\"originalUrl\":\"(.+?)\"",
														"replace": "$1"
													}},
													{"Replace": {"find": "\\/", "replace": "/"}}
												]}
											}}
										}}
									]}
								}},
								"href.li": {"SetPart": {
									"part": "Whole",
									"value": {"Modified": {
										"source": {"Part": "Query"},
										"modification": "URLDecode"
									}}
								}},
								"instagr.am": {"SetHost": "instagram.com"},
								"bfy.tw": {"IfCondition": {
									"condition": {"Not": {"FlagIsSet": "no-http"}},
									"mapper": {"All": [
										{"IfCondition": {
											"condition": {"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "utps-host-whitelist"}}}},
											"mapper": {
												"RemoveQueryParamsMatching": {"Any": [
													{"InSet": "utps"},
													{"ContainsAnyInList": {"where": "Start", "list": "utp-prefixes"}}
												]}
											}
										}},
										{"SetPart": {
											"part": "Whole",
											"value": {"Modified": {
												"source": {"HttpRequest": {
													"http_client_config_diff": {"danger_accept_invalid_certs": true}
												}},
												"modification": {"RegexCaptures": {
													"regex": "href=\"(.+?)\"",
													"replace": "$1"
												}}
											}}
										}}
									]}
								}},
								"lmgtfy.com": {"All": [{"SetHost": "google.com"}, {"SetPart": {"part": "Path", "value": "/search"}}]},
								"lmgtfy.app": {"All": [{"SetHost": "google.com"}, {"SetPart": {"part": "Path", "value": "/search"}}]},
								"lmddgtfy.net": {"SetHost": "duckduckgo.com"},
								"buymeacoff.ee": {"SetHost": "buymeacoffee.com"},
								"cach.me": {"SetHost": "cash.app"},
								"l.instagram.com": {"GetUrlFromQueryParam": "u"},
								"l.threads.com": {"GetUrlFromQueryParam": "u"},
								"steamcommunity.com": {"IfCondition": {
									"condition": {"PartIs": {"part": {"PathSegment": 0}, "value": "linkfilter"}},
									"mapper": {"GetUrlFromQueryParam": "u"}
								}},
								"lnk.bio": {"IfCondition": {
									"condition": {"PathIs": "/go"},
									"mapper": {"GetUrlFromQueryParam": "d"}
								}},
								"toyhou.se": {"IfCondition": {
									"condition": {"PathIs": "/~r"},
									"mapper": {"GetUrlFromQueryParam": "q"}
								}},
								"duckduckgo.com": {"IfCondition": {
									"condition": {"PathIs": "/l/"},
									"mapper": {"GetUrlFromQueryParam": "uddg"}
								}},
								"duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion": {"IfCondition": {
									"condition": {"PathIs": "/l/"},
									"mapper": {"GetUrlFromQueryParam": "uddg"}
								}},
								"subscribestar.adult": {"IfCondition": {
									"condition": {"PathIs": "/away"},
									"mapper": {"SetPart": {
										"part": "Whole",
										"value": {"Modified": {
											"source": {"Part": {"QueryParam": "url"}},
											"modification": {"All": [
												{"Replace": {"find": "\n", "replace": ""}},
												"Base64DecodeUrlSafe"
											]}
										}}
									}}
								}},
								"preview.tinyurl.com": {"All": [
									{"SetPart": {"part": "Subdomain", "value": null}},
									{"SetPart": {"part": {"BeforePathSegment": 0}, "value": "preview"}}
								]}
							}
						}
					},



					{
						"condition": {"All": [
							{"MaybeWWWDomain": "tinyurl.com"},
							{"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "preview"}}},
							{"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "app"}}}
						]},
						"mapper": {"SetPart": {"part": {"BeforePathSegment": 0}, "value": "preview"}}
					},
					{
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-http"}},
							{"MaybeWWWDomain": "tinyurl.com"},
							{"PartIs": {"part": {"PathSegment": 0}, "value": "preview"}}
						]},
						"mapper": {"All": [
							{"IfCondition": {
								"condition": {"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "utps-host-whitelist"}}}},
								"mapper": {
									"RemoveQueryParamsMatching": {"Any": [
										{"InSet": "utps"},
										{"ContainsAnyInList": {"where": "Start", "list": "utp-prefixes"}}
									]
								}}
							}},
							{"SetPart": {
								"part": "Whole",
								"value": {"Modified": {
									"source": {"HttpRequest": {}},
									"modification": {"RegexCaptures": {
										"regex": "let\\surl\\s=\\s\\\"(.+)\\\"",
										"replace": "$1"
									}}
								}}
							}}
						]}
					},



          {
						"condition": {"All": [
							{"UnqualifiedAnySuffix": "google"},
							{"PathIs": "/url"}
						]},
						"mapper": {"GetUrlFromQueryParam": "q"}
					}
				]
			}
		},



		{
			"CommonCondition": {
				"condition": {"All": [
					{"Not": {"FlagIsSet": "no-unmangle"}},
					{"HostIsOneOf": ["http", "https", "bsky.app", "www.bsky.app"]},
					{"PartContains": {"part": "Path", "value": "http"}},
					{"Not": {"PartIs": {"part": {"DomainSegment": 4}, "value": null}}}
				]},
				"rules": [
					{
						"CommonCondition": {
							"condition": {"All": [
								{"HostIsOneOf": ["http", "https"]},
								{"Not": {"FlagIsSet": "no-unmangle-host-is-http-or-https"}}
							]},
							"rules": [
								{
									"comment-1": "https://https//example.com/abc -> https://example.com/abc",
									"comment-2": "https://https//example1.com/example2.com/abc unchanged",
									"comment-3": "https://https//example1.com/user/example2.com/abc unchanged",
									"condition": {"TreatErrorAsFail": {"All": [
										{"PartContains": {"part": {"PathSegment": 1}, "value": "."}},
										{"Not": {"PartContains": {"part": {"PathSegment": 2}, "value": "."}}},
										{"Not": {"PartContains": {"part": {"NoneToEmptyString": {"PathSegment": 3}}, "value": "."}}}
									]}},
									"mapper": {"All": [
										{"CopyPart": {"from": {"PathSegment": 1}, "to": "Host"}},
										{"CopyPart": {"from": {"NoneToEmptyString": {"PartSegments": {"part": "Path", "split": "/", "start": 3}}}, "to": "Path"}}
									]}
								},
								{
									"comment-1": "https://https//example1.com/example2.com/abc -> https://example2.com/abc",
									"comment-2": "https://https//example1.com/user/example2.com/abc unchanged",
									"condition": {"TreatErrorAsFail": {"PartContains": {"part": {"PathSegment": 2}, "value": "."}}},
									"mapper": {"All": [
										{"CopyPart": {"from": {"PathSegment": 2}, "to": "Host"}},
										{"CopyPart": {"from": {"NoneToEmptyString": {"PartSegments": {"part": "Path", "split": "/", "start": 4}}}, "to": "Path"}}
									]}
								},
								{
									"comment-1": "https://https//example1.com/user/example2.com/abc -> https://example2.com/abc",
									"condition": {"TreatErrorAsFail": {"All": [
										{"Not": {"PartContains": {"part": {"PathSegment": 2}, "value": "."}}},
										{"PartContains": {"part": {"PathSegment": 3}, "value": "."}}
									]}},
									"mapper": {"All": [
										{"CopyPart": {"from": {"PathSegment": 3}, "to": "Host"}},
										{"CopyPart": {"from": {"PartSegments": {"part": "Path", "split": "/", "start": 5}}, "to": {"NoneToEmptyString": "Path"}}}
									]}
								}
							]
						}
					},
					{
						"comment": "https://example1.com/https://example2.com/user -> https://example2.com/abc",
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-unmangle-path-is-url"}},
							{"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "unmangle-path-is-url-host-whitelist"}}}},
							{"Any": [
								{"PartContains": {"part": "Path", "where": "Start", "value": "/http:"}},
								{"PartContains": {"part": "Path", "where": "Start", "value": "/https:"}}
							]}
						]},
						"mapper": {"SetPart": {
							"part": "Whole",
							"value": {"Modified": {"source": {"Part": "Path"}, "modification": {"StripPrefix": "/"}}}
						}}
					},
					{
						"comment": "https://example1.com/profile/https://example2.com/profile/user -> https://example2.com/profile/user",
						"comment2": "The general case requires conditions and mappers to talk to each other and would break the WayBack machine.",
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-unmangle-second-path-segment-is-url"}},
							{"Any": [
								{"PartContains": {"part": "Path", "where": "Start", "value": "/http:"}},
								{"PartContains": {"part": "Path", "where": "Start", "value": "/https:"}}
							]}
						]},
						"mapper": {
							"SetPart": {
								"part": "Whole",
								"value": {"Part": {"PartSegments": {"part": "Path", "split": "/", "start": 2, "end": null}}}
							}
						}
					},
					{
						"comment": "https://profile.example.com.example.com -> https://profile.example.com",
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-unmangle-subdomain-ends-in-not-subdomain"}},
							{"TreatErrorAsFail": {"Not": {"PartMatches": {"part": "NotSubdomain", "matcher": {"InSet": "unmangle-subdomain-ends-in-not-subdomain-not-subdomain-whitelist"}}}}},
							{"TreatErrorAsFail": {"PartContains": {
								"part": {"PartSegments": {"part": "Domain", "split": ".", "start": 1, "end": null}},
								"where": "Start",
								"value": {"Join": {"sources": [{"Part": "NotSubdomain"}, {"String": "."}]}}
							}}}
						]},
						"mapper": {"SetPart": {"part": "NotSubdomain", "value": null}}
					},



					{
						"condition": {"All": [
							{"MaybeWWWDomain": "bsky.app"},
							{"PartContains": {"part": "Path", "where": "End", "value": ".bsky"}}
						]},
						"mapper": {"ModifyPart": {"part": "Path", "modification": {"Append": ".social"}}}
					},
					{
						"condition": {"All": [
							{"MaybeWWWDomain": "bsky.app"},
							{"PartIs": {"part": {"PathSegment": 0}, "value": "profile"}},
							{"Not": {"PartContains": {"part": {"PathSegment": 1}, "value": "."}}},
							{"Not": {"PartContains": {"part": {"PathSegment": 1}, "value": ":"}}}
						]},
						"mapper": {"ModifyPart": {"part": {"PathSegment": 1}, "modification": {"Append": ".bsky.social"}}}
					},



					{
						"comment": "https://www.username.example.com -> https://username.example.com",
						"condition": {"All": [
							{"Not": {"FlagIsSet": "no-unmangle-subdomain-starting-with-www-segment"}},
							{"TreatErrorAsFail": {"PartContains": {"part": "Subdomain", "where": "Start", "value": "www."}}}
						]},
						"mapper": {"ModifyPart": {"part": "Subdomain", "modification": {"StripPrefix": "www."}}}
					}
				]
			}
		},



		{
			"condition": {"All": [
				{"PartIs": {"part": "Scheme", "value": "http"}},
				{"Not": {"FlagIsSet": "no-https-upgrade"}},
				{"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "https-upgrade-host-blacklist"}}}}
			]},
			"mapper": {"SetPart": {"part": "Scheme", "value": "https"}}
		},



		{
			"CommonCondition": {
				"condition": {"FlagIsSet": "unmobile"},
				"rules": [
					{
						"condition": {"All": [
							{"Any": [
								{"PartIs": {"part": {"DomainSegment": 0}, "value": "m"}},
								{"PartIs": {"part": {"DomainSegment": 0}, "value": "mobile"}}
							]},
							{"Not": {
								"PartMatches": {
									"part": "NotSubdomain",
									"matcher": {"IsOneOf": ["mobile.tumblr.com", "mobile.deviantart.com"]}
								}
							}}
						]},
						"mapper": {"SetPart": {"part": {"DomainSegment": 0}, "value": null}}
					},
					{
						"condition": {"Any": [
							{"PartIs": {"part": {"DomainSegment": 1}, "value": "m"}},
							{"PartIs": {"part": {"DomainSegment": 1}, "value": "mobile"}}
						]},
						"mapper": {"SetPart": {"part": {"DomainSegment": 1}, "value": null}}
					}
				]
			}
		},



		{
			"PartMap": {
				"comment-1": "If you can't get a certain domain to work here, it may be because Mozilla's Public Suffix List, therefore the psl crate, and therefore UrlPart consideres it a suffix.",
				"comment-2": "There's another PartMap below this one for UrlPart::Suffix.",
				"part": "NotSubdomain",
				"map": {
					"theonion.com" : "RemoveQuery",
					"teespring.com": "RemoveQuery",
					"instagram.com": "RemoveQuery",
					"twitter.com"  : {"SetHost": "x.com"},
					"vxtwitter.com": {"SetHost": "x.com"},
					"fixvx.com"    : {"SetHost": "x.com"},
					"fxtwitter.com": {"SetHost": "x.com"},
					"youtube.com"  : {"All": [
						{"RemoveQueryParams": ["si", "feature"]},
						{"IfCondition": {
							"condition": {"All": [
								{"FlagIsSet": "youtube-unshort"},
								{"PartIs": {"part": {"PathSegment": 0}, "value": "shorts"}}
							]},
							"mapper": {"All": [
								{"CopyPart": {"from": {"PathSegment": 1}, "to": {"QueryParam": "v"}}},
								{"SetPart": {"part": "Path", "value": "watch"}}
							]}
						}}
					]},
					"youtu.be"     : {"All": [
						{"SetHost" : "youtube.com"},
						{"CopyPart": {"from": {"PathSegment": 0}, "to": {"QueryParam": "v"}}},
						{"SetPart" : {"part": "Path", "value": "watch"}},
						{"RemoveQueryParams": ["si", "feature"]}
					]},
					"instagram.com": {"RemoveQueryParams": ["igshid", "igsh"]},
					"threads.net"  : {"RemoveQueryParams": ["igshid", "igsh", "xmt"]},
					"stackoverflow.com" : {"RemoveQueryParams": ["so_medium", "so_source", "c"]},
					"duckduckgo.com"    : {"RemoveQueryParams": ["t", "atb", "ia"]},
					"duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion": {"RemoveQueryParams": ["t", "atb", "ia"]},
					"washingtonpost.com": {"RemoveQueryParams": ["itid"]},
					"cnn.com": {"RemoveQueryParams": ["bt_ee", "bt_ts"]},
					"facebook.com": {"RemoveQueryParams": ["fs", "s", "mibextid"]},
					"bbc.com": {"RemoveQueryParamsMatching": {"Contains": {"where": "Start", "value": "at_"}}},
					"linktr.ee": {"RemoveQueryParams": ["ltsid"]},
					"github.com": {"RemoveQueryParams": ["notification_referrer_id"]},
					"theguardian.com": {"All": [
						{"RemoveQueryParams": ["CMP"]},
						{"SetPart": {"part": "Fragment", "value": null}}
					]},
					"roblox.com": {"AllowQueryParams": ["keyword", "Keyword"]},
					"hp.com": {"RemoveQueryParams": ["jumpid"]},
					"lenovo.com": {"RemoveQueryParams": ["IPromoID"]},
					"loblaws.ca": {"RemoveQueryParams": ["navid", "icid", "icta"]},



					"acer.com": {"RemoveQueryParamsMatching": {"Contains": {"where": "Start", "value": "internal_"}}},
					"steampowered.com": {"RemoveQueryParams": ["snr"]},
					"yahoo.com": {"RemoveQueryParams": ["p", "src", "pspid", "activity", ".src", "specId", "y"]},
					"bell.ca": {"RemoveQueryParams": ["INT"]},
					"fxdeviantart.com": {"SetPart": {"part": "NotSubdomain", "value": "deviantart.com"}},
					"hulu.com": {"RemoveQueryParams": ["from"]},
					"thrn.co": {"All": [
						{"SetHost": "throne.com"},
						{"SetPart": {"part": {"PathSegment": 0}, "value": null}}
					]},
					"addons.mozilla.org": {"RemoveQueryParams": ["platform", "appver"]},
					"amtrak.com": {"RemoveQueryParams": ["atv", "cmp"]},
					"support.google.com": {"AllowQueryParams": ["q"]},
					"reddit.com": {"IfCondition": {
						"condition": {"Not": {"PathIs": "/search"}},
						"mapper": {"AllowQueryParams": ["f"]}
					}},
					"cnn.com"   : {"IfCondition": {
						"condition": {"PartContains": {"part": {"PathSegment": -1}, "value": "h_", "where": "Start"}},
						"mapper": {"SetPart": {"part": {"PathSegment": -1}, "value": null}}
					}},
					"bell.ca"   : {"IfCondition": {
						"condition": {"PartContains": {"part": "Fragment", "where": "Start", "value": "INT="}},
						"mapper": {"SetPart": {"part": "Fragment", "value": null}}
					}},
					"pixiv.net": {"IfCondition": {
						"condition": {"PathIs": "/member.php"},
						"mapper": {"All": [
							{"SetPart": {"part": "Path", "value": "/users"}},
							{"CopyPart": {"from": {"QueryParam": "id"}, "to": "NextPathSegment"}},
							"RemoveQuery"
						]}
					}},
					"gelbooru.com": {"IfCondition": {
						"condition": {"PartIs": {"part": {"QueryParam": "page"}, "value": "post"}},
						"mapper": {"RemoveQueryParams": ["tags"]}
					}},
					"inkbunny.net": {"IfCondition": {
						"condition": {"PathIs": "/submissionsviewall.php"},
						"mapper": {"RemoveQueryParams": ["rid"]}
					}},
					"go.com": {"RemoveQueryParams": ["cid", "cmp", "att", "t", "DISCID", "r"]},
					"marvel.com": {"RemoveQueryParams": ["cid", "cmp", "att", "t", "DISCID", "r"]},
					"deviantart.com": {"IfCondition": {
						"condition": {"All": [
							{"Not": {"PartIs": {"part": "Subdomain", "value": "www"}}},
							{"Not": {"PartIs": {"part": "Subdomain", "value": ""}}}
						]},
						"mapper": {"All": [
							{"CopyPart": {"from": "Subdomain", "to": {"BeforePathSegment": 0}}},
							{"SetPart": {"part": "Subdomain", "value": null}}
						]}
					}},
					"tumblr.com": {"Rules": [
						{
							"condition": {"QueryHasParam": "redirect_to"},
							"mapper": {"All": [
								{"GetPathFromQueryParam": "redirect_to"},
								"RemoveQuery"
							]}
						},
						{
							"condition": {"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "search"}}},
							"mapper": "RemoveQuery"
						},
						{
							"condition": {"PartIs": {"part": {"PathSegment": 0}, "value": "login_required"}},
							"mapper": {"SetPart": {"part": {"PathSegment": 0}, "value": null}}
						}
					]}
				}
			}
		},
		{
			"PartMap": {
				"comment": "Some things that look like domains are actually considered suffixes by Mozilla's Public Suffix List, therefore the psl crate, and therefore UrlPart.",
				"part": "DomainSuffix",
				"map": {
					"blogspot.com": {"RemoveQueryParams": ["zx"]}
				}
			}
		},
		{
			"StringSourceMap": {
				"source": {"Modified": {"source": {"Part": "Host"}, "modification": {"StripMaybePrefix": "www."}}},
					"map": {
					"at.tumblr.com": {"All": [
						{"SetHost": "tumblr.com"},
						{"SetPart": {"part": {"PathSegment": 1}, "value": null}},
						"RemoveQuery"
					]},
					"danbooru.donmai.us": {"IfCondition": {
						"condition": {"PartIs": {"part": {"PathSegment": 0}, "value": "posts"}},
						"mapper": {"RemoveQueryParams": ["q"]}
					}},
					"x.com": {"Rules": [
						{
							"condition": {"PathIs": "/i/flow/login"},
							"mapper": {"All": [
								{"CopyPart": {"from": {"QueryParam": "redirect_after_login"}, "to": {"NoneToEmptyString": "Path"}}},
								{"SetPart": {"part": "Query", "value": null}}
							]}
						},
						{
							"condition": {"Not": {"PathIs": "/search"}},
							"mapper": "RemoveQuery"
						},
						{
							"condition": {"PathIs": "/search"},
							"mapper": {"AllowQueryParams": ["q", "f", "pf", "lf"]}
						},
						{
							"condition": {"All": [
								{"FlagIsSet": "discord-compatibility"},
								{"PartIs": {"part": {"PathSegment": 1}, "value": "status"}}
							]},
							"mapper": {"SetPart": {"part": "Host", "value": {"Var": "twitter-embed-domain"}}}
						},
						{
							"condition": {"All": [
								{"QualifiedDomain": "x.com"},
								{"FlagIsSet": "deadname-twitter"}
							]},
							"mapper": {"SetHost": "twitter.com"}
						}
					]}
				}
			}
		},
		{
			"PartRuleMap": {
				"part": "DomainMiddle",
				"map": {
					"ebay": {
						"condition": {"PartIs": {"part": {"PathSegment": 0}, "value": "itm"}},
						"mapper": "RemoveQuery"
					},
					"pinterest": {
						"condition": {"Not": {"PartIs": {"part": {"PathSegment": 0}, "value": "search"}}},
						"mapper": "RemoveQuery"
					},
					"walmart": {
						"condition": {"All": [
							{"FlagIsSet": "minimize"},
							{"PartIs": {"part": {"PathSegment": 1}, "value": "ip"}}
						]},
						"mapper": {"SetPart": {"part": {"PathSegment": 2}, "value": null}}
					},
					"bestbuy": {
						"condition": "Always",
						"mapper": {"RemoveQueryParams": ["icmp"]}
					},
					"amazon": {"Rules": [
						{
							"condition": {"PartContains": {"part": "Path", "where": "Start", "value": "/gp/offer-listing/"}},
							"mapper": {"All": [
								{"SetPart": {"part": {"PathSegment": 0}, "value": "dp"}},
								{"SetPart": {"part": {"PathSegment": 1}, "value": null}},
								{"SetPart": {"part": {"QueryParam": "aod"}, "value": "1"}}
							]}
						},
						{
							"condition": {"All": [
								{"FlagIsSet": "minimize"},
								{"PartIs": {"part": {"PathSegment": 1}, "value": "dp"}}
							]},
							"mapper": {"SetPart": {"part": {"PathSegment": 0}, "value": null}}
						},
						{
							"condition": {"All": [
								{"FlagIsSet": "minimize"},
								{"PartIs": {"part": {"PathSegment": 3}, "value": "dp"}}
							]},
							"mapper": {"SetPart": {"part": {"PathSegment": 2}, "value": null}}
						},
						{
							"condition": {"PartContains": {"part": "Path", "value": "/dp/"}},
							"mapper": {"AllowQueryParams": ["aod"]}
						},
						{
							"condition": {"All": [
								{"PartContains": {"part": "Path", "value": "/dp/"}},
								{"Any": [
									{"PartContains": {"part": {"PathSegment": -1}, "where": "Start", "value": "ref="}},
									{"PartContains": {"part": {"PathSegment": -1}, "where": "Anywhere", "value": "-"}},
									{"PartMatches" : {"part": {"PathSegment": -1}, "matcher": {"OnlyTheseChars": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-"]}}}
								]}
							]},
							"mapper": {"SetPart": {"part": {"PathSegment": -1}, "value": null}}
						},
						{
							"PartMap": {
								"part": "Path",
								"map": {
									"/s": {"AllowQueryParams": ["k", "i", "rh", "bbn"]},
									"/gp/buyagain": {"AllowQueryParams": ["ats"]},
									"/gp/customer-reviews": "RemoveQuery"
								}
							}
						},
						{
							"condition": {"PartIs": {"part": {"PathSegment": 0}, "value": "product-reviews"}},
							"mapper": "RemoveQuery"
						},
						{
							"condition": "Always",
							"mapper": {"RemoveQueryParams": ["ref", "ref_", "node", "ie"]}
						}
					]},
					"google": {"Rules": [
						{
							"PartMap": {
								"part": "Path",
								"map": {
									"/search": {"AllowQueryParams": ["hl", "q", "tbm", "p", "udm"]},
									"/setprefs": {"RemoveQueryParams": ["sa", "ved"]}
								}
							}
						},
						{
							"condition": "Always",
							"mapper": {"RemoveQueryParams": ["sca_esv"]}
						}
					]}
				}
			}
		},



		{
			"condition": {"TreatErrorAsFail": {"PartContains": {
				"part": "DomainMiddle",
				"value": "disney"
			}}},
			"mapper": {"RemoveQueryParams": ["cid", "cmp", "att", "t", "DISCID", "r"]}
		},



		{
			"CommonCondition": {
				"condition": "AnyFlagIsSet",
				"rules": [
					{
						"comment": "Discord embeds images using dedicated \"external images\" server(s). This gets the original image.",
						"condition": {"All": [
							{"FlagIsSet": "discord-unexternal"},
							{"HostIsOneOf": [
								"images-ext-1.discordapp.net",
								"images-ext-2.discordapp.net",
								"images-ext-3.discordapp.net"
							]}
						]},
						"mapper": {"All": [
							{"CopyPart": {"from": {"PathSegment": 2}, "to": "Scheme"}},
							{"CopyPart": {"from": {"PathSegment": 3}, "to": "Host"}},
							{"CopyPart": {"from": {"PartSegments": {"part": "Path", "split": "/", "start": 5}}, "to": "Path"}},
							"RemoveQuery"
						]}
					},



					{
						"condition": {"All": [
							{"Any": [
								{"FlagIsSet": "breezewiki"},
								{"FlagIsSet": "unbreezewiki"}
							]},
							{"PartMatches": {"part": "Host", "matcher": {"InSet": "breezewiki-hosts"}}},
							{"Not": {"PathIs": "/"}}
						]},
						"mapper": {"All": [
							{"SetHost": "fandom.com"},
							{"CopyPart": {"from": {"PathSegment": 0}, "to": "Subdomain"}},
							{"SetPart": {"part": {"PathSegment": 0}, "value": null}}
						]}
					},
					{
						"condition": {"All": [
							{"FlagIsSet": "breezewiki"},
							{"UnqualifiedDomain": "fandom.com"}
						]},
						"mapper": {"All": [
							{"CopyPart": {"from": "Subdomain", "to": {"BeforePathSegment": 0}}},
							{"SetPart": {"part": "Host", "value": {"Var": "breezewiki-domain"}}}
						]}
					},



					{
						"condition": {"All": [
							{"FlagIsSet": "onion-location"},
							{"Not": {"FlagIsSet": "no-http"}},
							{"PartIs": {"part": "Scheme", "value": "https"}}
						]},
						"mapper": {"All": [
							{"IfCondition": {
								"condition": {"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "utps-host-whitelist"}}}},
								"mapper": {
									"RemoveQueryParamsMatching": {"Any": [
										{"InSet": "utps"},
										{"ContainsAnyInList": {"where": "Start", "list": "utp-prefixes"}}
									]
								}}
							}},
							{"IgnoreError":
								{"SetPart": {
									"part": "Origin",
									"value": {"ExtractPart": {
										"part": "Origin",
										"source": {"HttpRequest": {"response_handler": {"Header": "Onion-Location"}}}
									}}
								}}
							}
						]}
					},
					{
						"condition": {"All": [
							{"Any": [
								{"FlagIsSet": "tor2web"},
								{"FlagIsSet": "tor2web2tor"}
							]},
							{"PartIs": {"part": "DomainMiddle", "value": "onion"}}
						]},
						"mapper": {"SetPart": {"part": "DomainSuffix", "value": null}}
					},
					{
						"condition": {"All": [
							{"FlagIsSet": "tor2web"},
							{"PartIs": {"part": {"DomainSegment": -1}, "value": "onion"}}
						]},
						"mapper": {"SetPart": {"part": "NextDomainSegment", "value": {"Var": "tor2web-suffix"}}}
					}
				]
			}
		},



		{
			"comment": "The query paramaters to always remove.",
			"condition": {"Not": {"PartMatches": {"part": "Host", "matcher": {"InSet": "utps-host-whitelist"}}}},
			"mapper": {
				"RemoveQueryParamsMatching": {"Any": [
					{"InSet": "utps"},
					{"ContainsAnyInList": {"where": "Start", "list": "utp-prefixes"}}
				]
			}}
		}
	]
}
